// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20191009171554_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.Membership", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveMember");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime>("MemberFrom");

                    b.Property<int>("PlanID");

                    b.Property<DateTime>("StartDate");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("PlanID");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("FinalProject.Models.Plan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day");

                    b.Property<int>("Duration");

                    b.Property<string>("PlanName");

                    b.Property<decimal>("Price");

                    b.Property<int>("TrainerID");

                    b.HasKey("ID");

                    b.HasIndex("TrainerID");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("FinalProject.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TrainerName");

                    b.Property<int>("YearsofExp");

                    b.HasKey("ID");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("FinalProject.Models.TuckShop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApparelID");

                    b.Property<string>("ApparelName");

                    b.Property<int>("MembershipID");

                    b.Property<decimal>("Price");

                    b.HasKey("ID");

                    b.HasIndex("MembershipID");

                    b.ToTable("TuckShop");
                });

            modelBuilder.Entity("FinalProject.Models.Membership", b =>
                {
                    b.HasOne("FinalProject.Models.Plan", "Plan")
                        .WithMany("Memberships")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Plan", b =>
                {
                    b.HasOne("FinalProject.Models.Trainer", "Trainer")
                        .WithMany("Plans")
                        .HasForeignKey("TrainerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.TuckShop", b =>
                {
                    b.HasOne("FinalProject.Models.Membership", "Membership")
                        .WithMany("TuckShops")
                        .HasForeignKey("MembershipID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
